services:
  postgres:
    image: postgres:16.3-alpine
    environment:
      - POSTGRES_LOGGING=true
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    networks:
      - blockfrost

  cardano-node:
    image: ghcr.io/intersectmbo/cardano-node:8.9.1
    environment:
      - NETWORK=${NETWORK:-preview}
    ports:
      - 3001:3001
    volumes:
      - node-db:/data
      - node-ipc:/ipc
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "curl -f 127.0.0.1:12788 || exit 1"]
      interval: 60s
      timeout: 10s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    networks:
      - blockfrost

  cardano-db-sync:
    image: ghcr.io/intersectmbo/cardano-db-sync:13.2.0.2
    environment:
      - NETWORK=${NETWORK:-preview}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - RESTORE_SNAPSHOT=${RESTORE_SNAPSHOT:-}
      - RESTORE_RECREATE_DB=N
      - EXTRA_DB_SYNC_ARGS=${EXTRA_DB_SYNC_ARGS:-}
    ports:
      - 3002:3002
    depends_on:
      cardano-node:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes:
      - db-sync-data:/var/lib/cexplorer
      - node-ipc:/node-ipc
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    networks:
      - blockfrost

  blockfrost:
    image: blockfrost/backend-ryo:latest
    environment:
      - BLOCKFROST_CONFIG_DBSYNC_HOST=postgres
      - BLOCKFROST_CONFIG_SERVER_LISTEN_ADDRESS=0.0.0.0
      - NODE_APP_INSTANCE=development
      - BLOCKFROST_CONFIG_DBSYNC_USER=${DB_USER}
      - BLOCKFROST_CONFIG_DBSYNC_DATABASE=${DB_NAME}
      - BLOCKFROST_CONFIG_DBSYNC_PORT=5432
      - PGPASSWORD=${DB_PASSWORD}
    ports:
      - 3000:3000
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./config:/app/config
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    networks:
      - blockfrost

  cardano-submit-api:
    image: ghcr.io/intersectmbo/cardano-submit-api:8.9.1
    environment:
      - NETWORK=${NETWORK:-preview}
    depends_on:
      - cardano-node
    volumes:
      - node-ipc:/node-ipc
    ports:
      - 8090:8090
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    networks:
      - blockfrost

volumes:
  db-sync-data:
  postgres:
  node-db:
  node-ipc:

networks:
  blockfrost:
    name: custom_blockfrost_net
