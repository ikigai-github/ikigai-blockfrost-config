---
global:
  commonLabels: {}
  commonAnnotations: {}
  cardanoNetwork: preview
  postgresql:
    host: "{{ .Release.Name }}-postgresql"
    service:
      ports:
        postgresql: "5432"
    auth:
      secretName: db-user-pass
      existingSecret: db-user-pass

# blockfrost service vars
numReplicas: 1
tokenRegistryUrl: https://tokens.cardano.org
postgresqlHostname: ""
dbSecretName: ""
imageTag: latest
serviceType: NodePort
ingress:
  enabled: false
  host: ""
  tls:
    enabled: false
    secretName: ""
  annotations: {}
config:
  nodeAppInstance: production
  selfManagedConfigMapName: ""
postgresStorageSize: 30Gi
#postgresStorageClassName: ebs-sc

# postgres helm chart vars
postgresql:
  deploy: true
  auth:
    deploySecret: true
    database: cexplorer
    username: cexplorer
    secretKeys:
      adminPasswordKey: postgres_admin_password
      userPasswordKey: postgres_password
  primary:
    persistence:
      existingClaim: postgres-data-claim

# cardano services helm chart vars
cardano-services:
  dbSync:
    restoreSnapshot: ""
    recreateDb: "N"
    imageTag: 13.1.0.2
    volumes:
      data:
        #storageClassName:
        storageSize: 30Gi
      tmp:
        enabled: false
        #storageClassName:
        storageSize: 30Gi
  node:
    imageTag: 1.35.5
    volumes:
      data:
        #storageClassName:
        storageSize: 10Gi
