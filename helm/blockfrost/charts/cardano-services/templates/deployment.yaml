apiVersion: apps/v1
kind: Deployment
metadata:
  name: cardano-services
  labels:
    {{- include "blockfrost.labels" . | nindent 4 -}}
  {{- if .Values.global.commonAnnotations }}
  annotations:
    {{- include "blockfrost.annotations" . | nindent 4 -}}
  {{- end }}
spec:
  selector:
    matchLabels:
      app: cardano-services
  template:
    metadata:
      labels:
        app: cardano-services
        {{- include "blockfrost.labels" . | nindent 8 -}}
      {{- if .Values.global.commonAnnotations }}
      annotations:
        {{- include "blockfrost.annotations" . | nindent 8 -}}
      {{- end }}
    spec:
      containers:
        - name: cardano-node
          image: ghcr.io/intersectmbo/cardano-node:{{ .Values.node.imageTag }}
          ports:
            - containerPort: 3001
          workingDir: /data
          env:
            - name: NETWORK
              value: "{{ .Values.global.cardanoNetwork }}"
          volumeMounts:
            - name: node-db
              mountPath: /data
            - name: node-ipc
              mountPath: /ipc

        - name: cardano-db-sync
          image: ghcr.io/intersectmbo/cardano-db-sync:{{ .Values.dbSync.imageTag }}
          workingDir: /var/lib/cexplorer
          ports:
            - containerPort: 3002
          env:
            - name: NETWORK
              value: "{{ .Values.global.cardanoNetwork }}"
            - name: POSTGRES_HOST
              value: "{{ tpl .Values.global.postgresql.host . }}"
            - name: POSTGRES_PORT
              value: "{{ .Values.global.postgresql.service.ports.postgresql }}"
            - name: RESTORE_RECREATE_DB
              value: "{{ .Values.dbSync.recreateDb }}"
            - name: RESTORE_SNAPSHOT
              value: "{{ .Values.dbSync.restoreSnapshot }}"
          volumeMounts:
            - name: db-sync-data
              mountPath: /var/lib/cexplorer
            - name: node-ipc
              mountPath: /node-ipc
            - name: db-credentials
              mountPath: /run/secrets
              readOnly: true
            {{ if .Values.dbSync.volumes.tmp.enabled }}
            - name: db-sync-tmp
              mountPath: /tmp
            {{ end }}

        - name: cardano-submit-api
          image: ghcr.io/intersectmbo/cardano-submit-api:{{ .Values.node.imageTag }}
          ports:
            - containerPort: 8090
          env:
            - name: NETWORK
              value: "{{ .Values.global.cardanoNetwork }}"
          volumeMounts:
            - name: node-ipc
              mountPath: /node-ipc

      volumes:
        - name: node-ipc
          emptyDir: {}
        - name: node-db
          persistentVolumeClaim:
            claimName: cardano-node-data-claim
        - name: db-sync-data
          persistentVolumeClaim:
            claimName: db-sync-data-claim
        - name: db-credentials
          secret:
            secretName: {{ .Values.global.postgresql.auth.secretName }}
        {{ if .Values.dbSync.volumes.tmp.enabled }}
        - name: db-sync-tmp
          persistentVolumeClaim:
            claimName: db-sync-tmp-claim
        {{ end }}